- hosts: localhost
  roles:
    - ansible-role-varnish
  vars:
    varnish_cache_size: 1024M
    varnish_log_dir: /var/log/varnish
    varnish_varnishncsa_file: "{{ varnish_log_dir }}/access.json"
# {
#     "@fields": {
#         "http": {
#             "client": "%{X-Client-Address}i",
#             "protocol": "%H",
#             "request_method": "%m",
#             "query_string": "%q",
#             "http_host": "%{Host}i",
#             "source_host": "%{X-Varnish-Host}o",
#             "status": "%s",
#             "url": "%U",
#             "hitmiss": "%{Varnish:hitmiss}x",
#             "x-varnish": "%{x-varnish}o",
#             "content-type": "%{Content-Type}o",
#             "content-length": "%{Content-Length}o",
#             "x-restarts": "%{X-Restarts}o",
#             "location": "%{Location}o",
#             "content-encoding": "%{Content-Encoding}o",
#             "referer": "%{Referer}i",
#             "user-agent": "%{User-agent}i",
#             "accept-encoding": "%{Accept-Encoding}i",
#             "connection": "%{Connection}i",
#             "x-varnish-backend": "%{X-Varnish-Backend}o"
#         }
#     },
#     "@version": 1,
#     "@timestamp": "%{%FT%T%z}t"
# }
    varnish_varnishncsa_format: '{ \"@fields\": { \"http\": { \"client\": \"%{X-Client-Address}i\", \"protocol\": \"%H\", \"request_method\": \"%m\", \"query_string\": \"%q\", \"http_host\": \"%{Host}i\", \"source_host\": \"%{X-Varnish-Host}o\", \"status\": \"%s\", \"url\": \"%U\", \"hitmiss\": \"%{Varnish:hitmiss}x\", \"x-varnish\": \"%{x-varnish}o\", \"content-type\": \"%{Content-Type}o\", \"content-length\": \"%{Content-Length}o\", \"x-restarts\": \"%{X-Restarts}o\", \"location\": \"%{Location}o\", \"content-encoding\": \"%{Content-Encoding}o\", \"referer\": \"%{Referer}i\", \"user-agent\": \"%{User-agent}i\", \"accept-encoding\": \"%{Accept-Encoding}i\", \"connection\": \"%{Connection}i\", \"x-varnish-backend\": \"%{X-Varnish-Backend}o\" } }, \"@version\": 1, \"@timestamp\": \"{{ "%{" }}%FT%T%z}t\" }'
    varnish_varnishadm_secret: password
    varnish_vcl:
      example:
        file: test/integration/example.vcl
      default:
        inline: |
          vcl 4.0;

          # Default backend definition. Set this to point to your content server.
          backend default {
              .host = "127.0.0.1";
              .port = "8080";
          }

          sub vcl_recv {
              # Happens before we check if we have this in cache already.
              #
              # Typically you clean up the request here, removing cookies you don't need,
              # rewriting the request, etc.
          }

          sub vcl_backend_response {
              # Happens after we have read the response headers from the backend.
              #
              # Here you clean the response headers, removing silly Set-Cookie headers
              # and other mistakes your backend does.
          }

          sub vcl_deliver {
              # Happens when we have all the pieces we need, and are about to send the
              # response to the client.
              #
              # You can do accounting or modifying the final object here.
          }
